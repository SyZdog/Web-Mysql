<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 订单表的映射文件 namespace值为对应接口的全路径 -->
<mapper namespace="com.tedu.dao.OrderMapper">
	<!-- 1.查询所有订单信息，id值为对应接口中方法的名字 resultType指定将查询的结果封装到哪个pojo对象中 -->
	<select id="findAll" resultType="com.tedu.pojo.Order">
		select id,door_id as doorId,order_no as orderNo,order_type as orderType, pnum,cashier,order_time as orderTime,pay_time as payTime,
		pay_type as payType, price
		 from tb_order
	</select>
	<!-- 2.根据ID删除订单信息 -->
	<update id="deleteById">
		delete from tb_order where id=#{id}
	</update>
	<!-- 3.新增一条订单信息 -->
	<update id="add">
	 	insert into tb_order values(null,#{doorId}, #{orderNo}, #{orderType}, #{pnum}, 
	 	#{cashier}, #{orderTime}, #{payTime}, #{payType}, #{price})
	</update>
	<!-- 4.根据ID查询订单信息 -->
	<select id="findById" resultType="com.tedu.pojo.Order">
		select id,door_id as doorId,order_no as orderNo,order_type as orderType, pnum,cashier,order_time as orderTime,pay_time as payTime,
		pay_type as payType, price from tb_order where id=#{id}
	</select>
	<!-- 根据ID修改订单信息 -->
	<update id="updateById">	
		update tb_order set door_id=#{doorId},order_no=#{orderNo},order_type=#{orderType},pnum=#{pnum},
		cashier=#{cashier},order_time=#{orderTime},pay_time=#{payTime},pay_type=#{payType},price=#{price}
		where id=#{id}
	</update>
</mapper>
